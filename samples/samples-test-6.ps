%!PS-Adobe-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.14.5 (Build 18F132) Quartz PS Context)
%%Title: (samples-test)
%%Creator: (Pages: cgpdftops CUPS filter)
%%CreationDate: (Friday, July 26 2019 20:54:36 +03)
%%For: (blueMix)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%PageOrder: Ascend
%RBINumCopies: 1
%%Pages: (atend)
%%BoundingBox: (atend)
%%EndComments
userdict/dscInfo 5 dict dup begin
/Title(samples-test)def
/Creator(Pages: cgpdftops CUPS filter)def
/CreationDate(Friday, July 26 2019 20:54:36 +03)def
/For(blueMix)def
/Pages 1 def
end put
%%BeginProlog
%%BeginFile: lw8_errorhandler-2.0
/currentpacking where 
	{ pop /oldpack currentpacking def /setpacking where
		{
			pop false setpacking
		}if
	}if
/$brkpage 64 dict def $brkpage begin
/prnt
 {dup type/stringtype ne{=string cvs}if dup length 6 mul/tx exch def/ty 10 def
  currentpoint/toy exch def/tox exch def 1 setgray newpath
  tox toy 2 sub moveto 0 ty rlineto tx 0 rlineto 0 ty neg rlineto
  closepath fill tox toy moveto 0 setgray show}bind def
/nl{currentpoint exch pop lmargin exch moveto 0 -10 rmoveto}def
/=={/cp 0 def typeprint nl}def
/typeprint{dup type exec}readonly def
/lmargin 72 def
/rmargin 72 def
/tprint
   {dup length cp add rmargin gt{nl/cp 0 def}if
    dup length cp add/cp exch def prnt}readonly def
/cvsprint{=string cvs tprint( )tprint}readonly def
/integertype{cvsprint}readonly def
/realtype{cvsprint}readonly def
/booleantype{cvsprint}readonly def
/operatortype{(--)tprint =string cvs tprint(-- )tprint}readonly def
/marktype{pop(-mark- )tprint}readonly def
/dicttype{pop(-dictionary- )tprint}readonly def
/nulltype{pop(-null- )tprint}readonly def
/filetype{pop(-filestream- )tprint}readonly def
/savetype{pop(-savelevel- )tprint}readonly def
/fonttype{pop(-fontid- )tprint}readonly def
/nametype{dup xcheck not{(/)tprint}if cvsprint}readonly def
/stringtype
 {dup rcheck{(\()tprint tprint(\))tprint}{pop(-string- )tprint}ifelse
 }readonly def
/arraytype
 {dup rcheck{dup xcheck
  {({)tprint{typeprint}forall(})tprint}
  {([)tprint{typeprint}forall(])tprint}ifelse}{pop(-array- )tprint}ifelse
 }readonly def
/packedarraytype
 {dup rcheck{dup xcheck
  {({)tprint{typeprint}forall(})tprint}
  {([)tprint{typeprint}forall(])tprint}ifelse}{pop(-packedarray- )tprint}ifelse
 }readonly def
/courier/Courier findfont 10 scalefont def
end %$brkpage
errordict/handleerror
 {systemdict begin $error begin $brkpage begin newerror
   {/newerror false store 
    vmstatus pop pop 0 ne{grestoreall}if initgraphics courier setfont
    lmargin 720 moveto(ERROR: )prnt errorname prnt
    nl(OFFENDING COMMAND: )prnt/command load prnt
 	$error/ostack known{
	$error/ostack get type dup/arraytype eq exch /packedarraytype eq or
   {nl nl(STACK:)prnt nl nl $error/ostack get aload length{==}repeat}if}if
    systemdict/showpage get exec(%%[ Error: )print
    errorname =print(; OffendingCommand: )print/command 
    load =print( ]%%)= flush}if end end end}
dup 0 systemdict put dup 4 $brkpage put bind readonly put
/currentpacking where 
	{ pop  /setpacking where
		{
			pop oldpack setpacking
		}if
	}if
%%EndFile
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
% Disable CTRL-D as an end-of-file marker...
userdict dup(\004)cvn{}put (\004\004)cvn{}put
[{
%%BeginFeature: *ColorModel RGB
<</cupsColorSpace 19/cupsBitsPerColor 8/cupsColorOrder 0/cupsCompression 0>>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *MediaType any
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *PageSize Letter
<</PageSize[612.0000 792.0000]/ImagingBBox null/Orientation 0>>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *cupsPrintQuality Normal
<</cupsInteger1 4 /HWResolution[300 300]>>setpagedevice
%%EndFeature
} stopped cleartomark
% x y w h ESPrc - Clip to a rectangle.
userdict/ESPrc/rectclip where{pop/rectclip load}
{{newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
neg 0 rlineto closepath clip newpath}bind}ifelse put
% x y w h ESPrf - Fill a rectangle.
userdict/ESPrf/rectfill where{pop/rectfill load}
{{gsave newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
neg 0 rlineto closepath fill grestore}bind}ifelse put
% x y w h ESPrs - Stroke a rectangle.
userdict/ESPrs/rectstroke where{pop/rectstroke load}
{{gsave newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
neg 0 rlineto closepath stroke grestore}bind}ifelse put
userdict/ESPwl{}bind put
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 612 792
%%BeginPageSetup
%%EndPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: UOXTDV+Vibes-Regular
%!FontType1-1.0: UOXTDV+Vibes-Regular 001.000%%CreationDate: 7/26/19% Copyright 2019 Apple Inc. and its licensors, all rights reserved.11 dict begin/FontInfo 9 dict dup begin/version (001.000) readonly def/FullName (Vibes Regular) readonly def/Weight (SnapShot) readonly def/isFixedPitch false def/UnderlinePosition -75 def/UnderlineThickness 50 defend readonly def/FontName /UOXTDV+Vibes-Regular def/PaintType 0 def/FontType 1 def/FontMatrix [0.0010 0 0 0.0010 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 33 /uniFEB2 putdup 34 /uniFE92 putdup 35 /uniFEF3 putdup 36 /uniFE8E putdup 37 /uniFB6C putdup 38 /uni0640 putdup 39 /uniFEDF putdup 40 /uni0627 putdup 41 /uni0648 putdup 42 /uniFE94 putdup 43 /uniFEF4 putdup 44 /uniFE91 putdup 45 /uniFEAE putdup 46 /uniFECC putdup 47 /uniFED0 putdup 48 /uniFEE0 putdup 49 /uniFEC2 putdup 50 /uniFEA7 putdup 51 /uniFEEE putdup 52 /uniFEEB putdup 53 /uniFED3 putdup 54 /uniFEC8 putdup 55 /uniFEE7 putdup 56 /uniFEE4 putdup 57 /uniFEA4 putdup 58 /uniFEE2 putdup 59 /uniFEB4 putdup 60 /uniFE98 putreadonly def/FontBBox {-117 -680 842 1105} readonly defcurrentdict endcurrentfile eexecD9D66F633B846A989B9974B0179FC6CC4458BB4CB99E3608702C78822367AAF89059868F63F93207640A6BD5DA214789139C491E02A37BF3866F2964E8D690D48D9F6C4A5EC22355F8123573812483E06B968AE84B5F20A982A0E6576475351697AB8C6EA040355C5542F297D7A3AF28AB93EA0771E0D56DBF00F7CA9CE9FB9FC2E0ECB00D04D5F5F3F24B987B546D6274971A477DEE12C44623C180BCDBA21172627610C4736632D1A4693E79719C3BC43DF5330790A52DCD4CF455ACC213F6B1C4BA249179DB360225568161552A16682E3A3604BFC39D571B1F8F183746CED447A512FCCED4867841CD4E73E5A2630DE0248030AB7C1317763D6CDD07D69BFC940E412CCBB646708B671FF930312AFD7D9F1901A0B36EB57713754535193C3AEA84F6569A6EB51B2E27DC1344CC152EA38A18C05BE3407CD6D78C0FC323B045676A365809C449323EB7FCD627D10798B449B2E0643548310F987B92F0C46795D3FBAAB47BE5386E0BB392EA3543C341067F4EA70698E1619F3F98F4560BD11017E4B4F35AAD589860FC2F82267DFB082C5867A0DC8EB04543F6C67FAAC8814E495AA2A719B35F789D57437E0B5FBBA4DF7FDC2D724A20A739B0DB169DDA0AD6611EE113017976CA58E0427396A82E1D8841E4D7135A67FB57D92171D1F0CFAF20DF6F2117B818DEF8EC76F932D6E6717CB267BAE93F19B43EF76BB109382F6EBE373A1011D4528D5574EC0C2D051066A7ED76942FA4DE0B7D9EF4D146A9D53B0C3194CE8E4381FAFAE00B34A6953A7899D491D01F6FE9FB41978397F72701A4AA7DB804226BD6DD3A606921EC9D97FE28975F868156AA4CC409ABB504F7C60C8DE41F7DF1CBB6FE60E5FEEA9238C23A9C1F66CE56116AD404C137B9973CA54E6725883ED5025BC2D45AEA2444C7421FFC7C16702EFEF584AF0A3009EA97821CB9AD882BB096124C071D7C20287F63F5F20AAD6E11753696A47ABC3AC7B3A3EC0E0AB40565E8E789224D54AC1B6FB2F26E0EF852E7A59D8382B28359169E004F7AF555947150DF0B37AB0D8090A47CA63CC9DAC6B7D3459E4D357B35FC9A7FFDB3BB32C52B188361E969C0D0A8B25DA37A20999A346FA9564E4E86019E760CF0172C9405C01F9E28916700DB5045F664A6E8E58E5FDE0E42DC5CFED5223B24D8140A8265AB66DB853E0994DE82311A4BA38D110F7B100AB42F95FAE67F06FB56BC9ACEDECFE596B97726545AD2BB8E28CC2E573DD62818F4B163154344D145B3C970AE75F031E4EB42A8F4D34DC2D20014E2E992A09645E5C2BBEBF97A1CC1C35AD0708ED830229FD98B04B60A8DB83623BA224B7C27FABEDBC22714087594B182525B89C4C062D855AB938480E2E43BD803C3AFBAA99844376B3E4CB50967C6360CB5015184190940F1E797B50A950775993A1DA07A064DDF5FDD316294D126E92E39895BB267B8B359401F0D09AFB531A718980D36AF644A51619641199874FBAB89F553F51DC189ECF411FD519205F040387C2CBD540DC221C2EF83375C1FB6F2AC2A317C5D292A24F15AF1FEBB24E5CB26723F07409EDAD58314662999C196C90D87576EDDDDD04FB496BEAD5A0CACF9B095529CE32A39D3F13F4243426D13322C997973ACBF4068B81D3B829065215AE294DEF0F6111DFA5905B61C280C44201FFB660D4AA016F4E3F927D150EA11E3163B84FD38225D1AB1D29D4C011EC13DE3618C5155108EA2632CC507E6862351C8DC48F22669DE6DFF4C4FD11842733B59102B1A6EDEFFA9875C8E444ED400797C418548E9E3ED5E65A1B4BD6A025D472F1C4CD078AFB9ADB403FA547C46C7F19F913B4D748F1D7C96E3CFEA364E2D9992C678D4A6528AD87C932F0719CC7D00EC04018F8975AD9A71A9D9AB50A1F7D25243842B2B20A37F94A628D550C9B719D36268B22CE443D11D19053C99040DF7F5FB62EDC3DC72AA2E70D53F461ABC42F10769EF11DC292E762EAF8DEFF85C2037BB77E6B6E81349B3610BF140B7EA31C8FE8094355934235309F3A104A5D0F70410ABB56CE9967B95EFA3158A271BD92D12B9CB6944A8EE3A8E5624EA889E0BB45CBC00920E103EEA538D8773C6B24543B1443FD738EAC6D8BCCCB9726A94FFA92A9093CCB0BADC6693C17AD635137609BCA7E9C0942408D9578F968065CA8F10DBD047096ED231A40D844A0E159088FCF2691814B8B50A81920DBF2C505BF329497029CB230B0C604616D910A855E3A9C001906FD657C12F683211453C8280D5C742B0C82C1BF405757A0B3FF6B2C64553028BE24B12A741F9D0B9840E72CA5B325E9261C6FB9CA4AC9EA9A75E56DC2C1EEDEA8D59484D7998A3F5432EF0A3330467D4B8D20F138E51B8AF8E6207422FB47524E4C813E8380986F44355C4A04A4CB59267848A4FEA2B0441DA2A915B849F23FFA55112EB45E22CD9BE8310B995116FBD54337E5B2623AE07E1E7911BC0C18145E3F40A917161C254CD4ED39F7C9F447EDAA34746FD2E93F37A2AE30259501D617BB8BDEC03029B3819163FD138EF4DFDDBFC48EB72661F495928755FCC04902165CE78A8B3E32649A50643B07C74E6356ADD4351A6A6DC3322F82C149494BE2615979C21D4F65367CAADBB26622CF419C6A6507F539AD1F3C483734980F422B3484DB024C76604E67568BC8D16EB710D3F7FDBDEFB3DA0E9FED063F49A33FEE2A9EFE5D1D90C1488B863CBBAEEB4FD7B2F540EF00FF284B465335954912FDD559DC7DAC640E1C454D8983C43F20555E08354D3EBA08FEE0DE875F2B8B305F5F7DF7F5CCE58A162E3024BD826E65927D5BDA936B3E4755D801DC4965BF9EB7784D4A892331D914848C68AF6397F4056B1C5644ADA7ACE562B2B82C9633B5930D7F05CE5D07CC9D1CFB2C49DC1F2BBA198C0CE7368F51307B5C71F8BF6B674AB12F2AFCF7EBF43FD00EE7A8E94A936E7A8A1D50F0BC3713EAB70E7C860D52A89E6F1021B55ED0205C6392D97476B0213A340DEEEDDC05E44364C7F00F68F85BF535D4591068CF44F51FA4B18F6243411E6034E8D7D66A202BB548DDCB810EBE80AA44C85274BF831C9F0D9B2CCAD35E88CD01E3C459382A64D0CD966093625C857E6CD4C15AAC3EEC8E5B8B64A06CFA738016B4B2F2F88AC8B79122476B52703E9A503DADB66E3EF0BF360BB2258F6D8412DA8A93EDD76FA8A28D39683E48AD922B16EB58C3694141D714B19821B68EE3788D164512D44FA224CB603278EBCF633F6C00B4A284ABEF951DBEBB71EED0A9202BA04375D1B42A71F0FCECF0CCD40E705098426C27D4E9992897031381588ED4034D538677EC69C6DDA2FB2A3343207A16232C6C56FA8E6AFA52C43D38A865A6C60B472AC4F453F5B71849B94F4AA732B75A3B71812098CA90725F9693429452E5DA0C951D053E588A3A4D8EA3C2D26F2A4F1D33A08216D2F995710BDCC200F68531669AAF364DACB5892C8336A67CC4CB66A7C81857F67DECE9C39B48CD6B17FF1E4368F462E591EF12852D5851173F223C7A84564186E006FC304410FF0CE7D79A82BE3A3DF47A065401919294EA3282C496A9CBABAC7F7FEE16F252E32E35FB690751574E3DD32019C53B65DB80719F8504D0600936BEB94C0621D33E9358F5A32C4971AF2701529654F548FBB88FF202B87433908B64C9A0328089DAA4342452AA56CD9D135268092854160C6743749482F0515A69564BCAFA7BC97A7917406C46A6392AF1AE357C6AFF952CB8EEBA83C789F45E70716201073B503F592C4E6257BA79ED0FD5EEBCE59A97E3CF9925D4504E864E11193EF9B2DCECD871B12895985EE8FEDA11D8E89612F9E44EFB8ED31B1E91652B79977F62A074B7E5B928D8D33BDEE051E0242C310554C8DBDD5C6EE7FB375BB069E2B7EB54EDE1E29C15EF153CEAD6A143D423B8ED7338CBA46423F63F8D9784B2E6C2B2D985461F472950E5D1B4CFB4FFE4C2467543A7278643CCE16CECBCAE9210E4F1C907C429C4CF0ED9B9C8822BD9A1BEFF5A2234252765D78B27760C70A8E35F37C1EDD7742CB752FDA33CC97A4D1D5A380967A3BEE0BC22B18B4A23CD195F536ED4E4B323AF28EF27D325B74D84FFB36A35355932FEACBB40F70AF4133A1578485073ABABF9389FF4165B64A6209BCA4E41EC9080D8D1CBE5DE4E05EE951530D4511B9EA0BEBFA265CB8923B77B38E20537846E1B74D4875C40011399BC5E3926597E4A0AD503D0E001CFA92ADB215C61582402CEA60739D2FAEDAACAC32B1221D2C20894599B3B4F24063B877FED65E44C8E71D5E6B77634BCE3D81942C40F5B4DB9F7797B099D53D8BAFE4D6CCBB5A9418A47B4382794DBB3FE0EA63EAF81240BFE41357BDDC7A258FF09C65AC707F99FB1DBD8F15B8A8EBDE5E015B9CE295C095B992EB532E556E8AA58414FD633E101828FF2FADFF7925F0579AFCEAE9FC2B4132D9D199943B3B8E6FE060AF670CC01814464F5005109940CDD440D6A697EF14C768B9A264676E21522F519EE17733C5A87269C6510445765A7E5AFEA80A31625B51ED29373485045EC41C74564FEE23D31BFC150E0C347FCF60288DE70FA0BB1761314571E3E0CDB93739BD5DDA3A60FB8796E8C6E1760D2509B7D9D6A2D6CC5E4422CC4C1C48A1795C23F07D985D94272EBCCDF07D53008F94BD99D36229705460F94D17C89C352E277D5C7F304053AE7D79FBB5BCFB6B4D4E9E9C5AD174779E8B1C44252BBB4E3586405327BB5EB240B6E786D790A83C814EBCFCECADE5B31DF3F27CEE0638434CA991EAAFC2BC24E05433D350DB4E54839C5A7C83EB37B6F3739420BAD168C16BE6763E3932C8A8B98A8C7F3E069749F8378D60572D312CCB4BFC6A5046A97497B32CEA70FBE8DEF8B446427EAB1B19DEF47AB46BECB631E1C49E0E0863FC86EADD37D7CA1E6BEE8DD7B824A9C7D9766BD0B7AC1ABEE486C4A3E8EA8102301BA1E7451808C15545ADEFA4E47B8CFE580A9DBA8EE50482833D46040B2804E2E50A78D14238D22192A84ECB204596F170062C1FF1F77E92DE03AE0BDCB6474A8E53E78D38DA89757B9809CB3B884F03950C4A3F8F8E18F5A834CECEDCBDE7260F11ED9B994161C391349976A18ADE32C6CC1200FC488E5E77AFCE4CC2115785FBDAF23058C9C301AA51A51898A9F7EFE7C5A3EEC7265044C641FF0392E5921CBEED20B50159A92073C601A7DDD50F7342098848BCE0FE85C8E4D44CAC871D95B2D296CCA7BE1AB4F181E39AA8F75DDD64CC4AAB7A2BFE603E62DF598A6D016485F0636D69F5CC8A2E4D84D12C1C2624F5995E178C48B2D86E5F737C6157CEFB0A4508C66F7343BFB216BFAB88AC8780C9B5AE5267FE89299685C6E509A1E82AEECC0065B6A33C56D66CF7E7B3113FD279B760F2F749D674BC0BF7F797F9BABF6F5B0DE1B5AC3E95B4F901EDDAF968F52B21F8088981EAD67ABCF85F040DE90D454799643C5D8CE01196A20A119493F4445291A4E23305A3A260DB5F37D780726852E423DF8FA59F5FA88FCEEC672911CC8A1035CB909A0F995CC432D11D8F2FF9F82ED2C73275900FB50B5ABA2B6096F2B81A8627B0A6CD8F4FED653DB93C1B2F464C6D4EBEAA0DCE38597C47FF626DF2D5A29BF2D7C2E3AEFC1F7F721F39F93A6B47D756FCF9484CF253A889E63DBB663952C8394C9FDEA9F7C07B379351F59FE9ED738FB1C48C247F3F5A32E23877ABD8F27928865971B7493325E0F43423EA74CD1F767FC840560C212D57B9B22E89EF4E5B3D439FA647A17BBA2F1642A82511C627155E29C8E9926E1834F22427BE1465017A2F3F35EA39C82C04FC4D625B18BCF1B0C2FD1D5C21F817C0E8D30E960C00E2C8B7A89213CE1D010A1A547ED74991B35CF394A5B5ED2B0A34F0E3C7FD0C4B58C37BD4E9419AC8145C787A8D93E0C266D9C7FA3B069C5233717FADCE5FC029BFEB1321265EAB59DB0A228C375DFE530CAE054EE5692B1D6A7AED7F4E9C0C2A0DC9ED579785756ADAE35E3D308444ED372870B63B02F2282552678A57136EE440678C6E5808DF5E226C566622810A9DF11ABA3B1BD666C683926092BFA088FFB627815582BD599132E0EAF2533DD4BBF1E3F5A783EB77F15F1ADE5CA551FEFE465EED6A2151987A490A3C070FC9864A4D0AD9165BE964F4FB2FF45B46F2753D4D978C360D7A8C9F18563F69BF760B6094A41A15BA51EBCE3BEA3A436DF25ADB92853B9F0E6FFE3EF5A1A6901547C62129829C3B03E544EBFF0237641FFC273EAFA812A99E58FEB40D252F63901D3928B5679B42830D0B6669C110BB8B2A4B62571A3F82C3FB4DCC07EE5C2FD46E95806780AB634D0B943A7C32716A0FFF3FF1EA79B73BCA6AB279BB61696260E2EF29635D69F779413D579D4EC2475FB9933F52ECC83815739B30202060830CBD579A33D9802E6397C1F2B203BE7E12F01CBFFFCEB35170F7369C105E57E57E3E427965A099249606380E6234C9EC806EB7B4DBED77F592ABA262176558E6BDC479AB1BD92442644A4A31EF01B95478B2D32F406C4AEA1E487C4A7FD8E85F5538E292B0F33031DDA4C445AA4A7AAB1515E5BD688943C57946B3F38229E2E31714C186BEF3FAD940E69BEDE8D2ABC3698995D1ADCB7A285DFC5FFA523A6B30EA58A3C61576C8FC020B6439380D4D67B81F98542F5AE21AA1FAA6DB2A6122EBF91EE30DF96A07981B1328EF4FE7FE75483596849803ED12242D50BF7DCE7E4A9A81312C0639AB37D0391FD528A99FECC4168FBFA8EC714A5D48D8F25B013E4415B57C74144E70D116A62015E0DDDBCB5F1A7E31859271566BEDA693EB6F0A2A7C922318F6C338D091729C636EE906BFE4C3ADF22F2830B81F5EC80421CB9E2A65C238B4CF7FFE0CF5F82A5EF8C427942B3E5AE26F31459C54A92FDA9D92D64E78BF14A5B6095AFFD6711A3FEA135DF7D0D9791DA2145EC5029EB90F45C8CBD404307645664FA04E655BEA7AF0B7FAFD035A3025E98467C7F0792F4F7B6544EEC04D94D2205A4E34BA5A724055918F2CD55921D4999702159A3BA54215337545D66DDE992E0F7642D1E8FE12B37BF867545DBCFC6B52E0DF9FC2EB7E50C7849BC5A753DF4764A8C52C7F0599290835D26F06FB8D763692C65190C78ACDADB18D99636EE969417C8A9B1FECEEDA9CD908F987A55A7A4CF0D3F9A13AFDBDF86446D5BB2C3838C8BE723B9F72352A2369BDB4D861C556CF3019C681790616962D9D959DF2C2A6711A41BF31D8B87689DDFA7A4BC94358A3FEC7DDBA920EAFBA1915D53743B4B160F38834A071B56A09EA389959B228163EBA27E0B61CE941AC16D9A5236425721CB99CB5187801E5955E7F827587C339BB68C85CE49207DCDD5DF5289D4D735D567DA64E8244B682260E2C9F406E3D196491E5E7BEB3659FDE6A9579E8A9EE7603315019BE61F359099878601AFF77C6840914F112BA0E4FAC772A61DA803427A02819CB21E834D680C21C8FF577FC2F808BC6658B88B79F2F35A9504FB7BBF2BB48A35BDE612528BBABAF0069F9B3D35DD2B49FD5048294B90CF4BE06B12A86309B723103CC2B9174832A11493EEBA04B43D8943E0F47D9A82C060DCF1D17385BD4D5F165378E60440C82A044B07A82DB0B0C89C83BE19CE8AA4274EA5B260916B06307DB26657A40CB019ACB1D474050F8C7F7D3FAD134E4C9D741B355913C456D3039DC5309D34D82EB7AF37797647AA0681B6163488E883065B81AE93C45A1653933C64FF00C68840F1F52783E7C374ED6BAD4DE001F4C3007B1F317579651E6D6662189CC2AF9DECA37431E542990682712D1C26CE70723F961AE918F7A96720E742BED221E2202A46E48DF5B6BD4835017FEC5C82E1B843D2ACFDF1BE018801AA89C44FDC7D33A0F913E74CF03496D3A0A85158A10136F2FD01D1C01DE292BA349D92F46C165F61DB13CBD714F7FE22F49079563B4216F35349A5FB3C8C6D0FAE9F879FB2BEA9DB1FCAF091AF719EF1B555BF5CD84CB1A47B94979A1AEC07CC71172608E2FB39E500E15F5085B37D993CCC2992E44B1AC9972DF900D97A27B71189FE811796C192CF47B15BF27F59CB0616C732CABFB60DB70E3000571E2233F78FFA259D579D8C717B8A4C2162EBC4434CE929670D8C568BC9A81A375D899E5F8FA27100CAEB0681B90356C4BFF6D05844285752BD616382B5A904C753C507869F78EDA9947F363576DF6589F02566ED5ED81A19B42037DCF634147136699A1F3BF1B8D488AC3150FC8C5A7CF9980D87CD7B46970E007BF05F35AA2F1FBE5680A4013F64F0F63A8A45042C902174199F1A92DCAC2346838BC307634693266B414524B00CEF4D899F8D82AEC42B9D22EC3895BAFF555DDDEF3D5993F6CA143C14F7D1965045B1CBA229FEF9E1645BE0248F02F31205111FF9ED68184054798FC3EDEBACD65CACF2B1D84B00B225B3FABB34ADCFF1D0B6A58B7332A07B89F0495E4660C8278D3FF626DC0DA51073A40E06B817E276B13E419303285A2F6BACB577D935E93E58553843F8AD0A462D32EB5DE38ECE2F1453BD1C733D051B3D3A4429C8AA43D9C120A99195C76B707D5DC95A88450BE1954B570116CD6231E4E19FD226A5752731F9A1753AA052E2B8FF32AFBB1A34ED2BDDCDFDD2254EA770A68292AD919D3DBE2FC2D9F2593D2343D7762E9AF13D7C38AD6503C291216119C208F5BA71FBA2E725C43B944D9D52A2B2D276761F7BC11A62A0C44846C6331EB1234405B0777545229B61A345F9E21AF5F179B571BD59A62F2A89E84964B2BE890995391DE21B3EF751C47A6F501EC4409704ECE3BBE01162CC5AB273E2053A767F0F29A92E4EA22AC57C256534B2B3561B79E836E4BEF34FB2AFB4C1A0729F5652C35ECEC6D8523FCD79A957A113342BF0AC93275C1228782FBA14118566D4A9D63A261B1EC8D2BEA53DBB3311F29262EE1757A278D4487EC454147F40D5806CA674F4EA38FC431D4E1F4BF41F5903FA9C2D391DEC576BEA7250F5001779FDFACD10C7C640723C170B0B44EB570690E34B0D2C0DA192947F0B1169D3690BA8A4210C027C024E0888646C6210B54219DE5DB42A207D7257E07CCCC246917971F2F8C4A8F8644DAE9271AE7C139C568F941BD789053D5F5870B8C4FC7CD4BC96D3837C8173857B4A1B4B8174380FC0D1A74769B8D4AD9326985DC273B247C42B18B84212A6B7E4AC1ED0A0C6C60B3577E2DDA1B8A81AF620D625B08583B8BD05DF12EAC321B986AE1B97ECE716CDC7DB48F7C5ED120C76784760798B87D69AE81FABDB7DC5FBA522EDD241058CFDEFB48644BE3C37919937C514815EEB0ECFE15BC8A17FE3C89841504785C0D4CFF8740AAC3383EB3C93186B24B19A2D279FD50281AA5125EB980E9336F17D30BA354EF7E49FBC4B24D00AA1C67337957F37EFD7A3A074929F86CABBB73E2ADD7B3864FB136019906E034B52BA9D5C68F75244F1D6CE8B948923FE02E281222E38E41120D89CF8D5A1E68B3974E7DF8C239C1EC979E806C39CE008E2B095B17EB71835727F48536E986E3F6722C515A13F4870E876FBCF6235BAD1F0D38ACF65F81BA435408094FF4369A652F9CD02BD78B504F5B7F74401CB12EC9CDC2B5E1E8308A148A09F3635463C3B4CF60191AD691259B5CF8059089DD16780CC0CBC418A27BA6DD09D629BD9E91447885DAB1A72766F61921C07C479C020337FF0282E83E0BC1242EF89DF691DEDD660129977CCC9A3C1C37794C5572274BED86EA22EDC984037976BA9678416CF16CCE08E683654D5676C2EF8C6D50C9AAB09F342E1655B99A7FE64AA3AEFDD6667240013EDA8D5AF84B1E02DD273D4B52BC576CF2CAA0F940340E705F81AC9B0E4E1C7EDA237BFE1CC5B75875F7C95895AB990D6F69D47B46D50647129F9252764235A52D4B5FDDE9F47077B5F55564094722A1493A2FFDCB8A0D8AADEBB6A8AE4DF9A478F81A53C4C1078DDFA65053F3407BB9387C94C12F90438D90A3DF7D57158D65775AE1D0B7586FB81E96F991BE29EB04712448D81D0030558BD72FCEC8DE71A746FF544FA2A6FFC1634E0AE6A10A75162D5ED431AB19660AA6ACCB33439764C95C9A28849FECE2FA1FD2383115FB8546D434861520E6DF6069EE4A5C8C7227500816FAC7D7FFC39FAD5E846F2816EBD8ECDB22DF84A024147B0406E6F3FC74A2952C2D5B6E2BD1B217064E34703E9590CB786C88C47C923D7C0FB8AB2B9D8AAD5BD96F735966006E3F5A6637B6EEFE985EDE787CB669A97356D1CEC04215353DFCA3D2AFFA7D372A208D36DB8AD6B246713BF520643F6B04DFD31998CA0A39CA8E435DB67E7C925EDF964929C650BEB7C46AB79FDA99261EA7D87EE3C9EA317D14CB59C5D9DB3C0885C5148FDD80B5D26E62E31D64269A65AC16409FE8525954F8FAEAB53CE4A2C6B0BAFD1F05A51934601BB7F832876E56C4B62F47C3542DD9AAE88122223DB2DA82503FB97540736E368CC28DF8DBD3513F632ECF1207F4586B9F292ADF54BA1990CB33ECAEEF0F9CDBDF8F9FD9F1577238EECD9F432F13B50638CCAA2F42FA6F44DB04D881B0B65C51661623B3AF234EAAC4C976278419CDE9E11EBB9C0BA33941248B505A26E53B2DA39615FFCE07F567BF7850F70D2AE84AE779418C70FD155B1A4A3323886DB0854B09FE2172E4E2EF61848EAA77197CF3928236901CB812F58A403C4BB2103ED809C3BFAD290AC99EBEE325A913E5BC91C8EE69411C4A42C4D1002206F2A21E4B9E52156615D0F8DCE883E62AB80D3768B3645F29D27041F7BA9EA931D19E135EC3D1596B3B1CB4AB2391AB13FCB507AB797D254EE208484CF5B5E0D0AB11615966C6AD3EF4ABC90C3EDEAD89F10FD4A0F2BBA52C98569F8F76F8075F9D9092EE542968BE3D3821BCCCDFBF093F9490420245DA305736CF816A367E532C17C9031E315114E5E231A4D1AC699A3DA58764FEB211348F8CE493767B7C2A1FCFC7E01FB9F3D973BBAEA4CBA18FF8B6D86F1E1CFA51E053B7A194DCFF7E5483F295F5C1BFAF8D776A11919980EEA720B5B6F16EE311A8D9B1ED50626E337FAD0E3927878222271A4AC65A82C9B704B2B833C056C911CE476C54F1C074E4BD71EB70E7485FDA49149FB356792DAF5F97C2CCADFFE3226B885BD61B3CF1895A4AE0883590D9F3C98B36888C82493407229B45C0FCC2818118DECA6C7BB0669D88921024B404E14AA001F6152DD140D8FC30D829485FB2759BE8F63A3D19C0D7746384827857C8C1E219D395E04A56F664BE9BEE8375241F50F513F15AA13EB54D179BB057785428087D0BB891FF01E75709AA67C4BB6D44CFCFA43BCB6534EAAB83A436B6D5A58639EEDDCD9B119CD3E59C5C1C962F8F75448A46D27D05F7B582EFB684C3ED227DC7439049816D6AA1B8D9709E5100A4CDC908753177535E6320296C3E6D5F0E764673CB17D2AA2872DCB0801BBD4C03031A5F022D6B56CCF57A8DF183E06A0AEEEC99D04EA53506EA4B862358969D86CA901401BCCB3165021797DC5A703CABB40A3A76656EA331AF17BB066FBFF594E0F108118B56BDE87D81E03F49A155D33BC4407013C1598E394469A89F0C70147753E076B7B616E8E3C5AD158E1E3CD34B39A2B64803B5AE20D43B509DC4570223C1F96EC26F53071388AA9B7DB824F49EA8C5BFC1A762B0F33C6D77F45F7024ED4ED7A7C323B9F2695FDF65A5BD34578DEA1134124D0A44065524177E0E8A8B5A8F4DF62BD5AD26289C9461C251ED1CF42029A5365F4DB6D79593C85F64DD5AC316BCC3D67DC288A50FB4F27A949CE6C5657EDFA8771ECD8E45E178D8DA15EBF60B71BE7491E8BE55FB1F45964D32232C764A66C7D6AEE89781240DE9DB7D403E80AC2ACAC8A74236D4955817236A3A75E1A99C2CA77E9B3735CDFCF5A1DF242AFD57F37268F4AE5B0A618456BC63B16A7904524BA518B7AE408143B4014695F2D368B82F88B340E0A494FE5957875273BC471A9E04DB83AFFFCEF0370C492D7A0212B4A2D45679B4B88FAC725BB05109F9EECA11BC59488B4E46A699694BC3E14B8406098C47E24CC5EC27D4E26F3C9524FB6B2A6453C56E54D543D3D4AB89924FD3A937552FAE40A91B73DC810AA266C4A58DE777F2505AA39E4C24F398FEDFAAB63EC204330B0D9E94B76DA863B34FA38598D02B1F7B1EB5B1EF607D1274BA07D99C46C1FD83EE9A7E67E6A21591FCE822F96BA94218634E8457B8E58067FE2D974F4EB1EF9EAC47EDA5D93EFA997A5643382CFAE69AFB8DBA34FE6EE2EFE17061F7DDCD4D287EE832F0ECB81C5DE85E15C5C670D642FA826CC319A0612BD7D7F21386C7AC610F0A653A80F612C76C99341EAE75AF7F63A02289F7A2580B4DECFA70BEC97C6EC6D5200AE3983EA42B942EF34B64A089E15CB5AD5B5158C7C9C53DA5073BD5FFCFBC86C41B199D4FCA4B891A0A7851DD7F307983F24ABC0D95B1C6290D558C966CA36C301112712683107497DFD3FBB636062E9454094EC9006421062E82FC4FB2E48916957D177C0C868090F05E3AD4013271B395D6D7761F6B4504E69AE28B0EDF4EA448C35F3F89AAF8A6CD2DAC6C41485CAADEC5159D3058BBFFB39235705025CDBE1F64CFD95A3166E238FBC6DE9C41E8CDF75253D943E79BFE1ABDA5989EB9AE59F85A30B85741F77C6A22FCF5D06DD0330BD418FF6DDB323B5385A19A9379E8715CC15E1186560E9F65EAA181C056851F1B36BE6645BED9220CE955E1F4F6470CC30F4EA1766B76C119937A14B7F043BF96B230BAEA7E468A5862AC42BF2030E221C6368D839A2C46753BBB3278BC987BC56A4F97AF9C0A2924AD120B4BBD285DE469EC015E1FA1BB7F85740BFFB6F4A89A8DD05AB04E03673E7B699811E27E3015C9DE10A2E558A16174EEB1C1E99DBEEAD05409E7E88C894B6A32C73EDCB97F3CBBE08BEE6A75CF99D7C7B050988C51F03E409DCE07976B8ECAD593620D4DA44E63BA88AA703CBC79C9A4D21D517151CC796343476F35A43E337FBC5F56CCC5B048F24B7B133804833015FEAE1FC763011206A6F22FF1B004730A60C871E81A47B3B6FDB110BF87789F5FAD41FC71CDFBE16559C04C2C5067FD9257DA334BAF553E87B41189AE0805748C5971C7B02F265712E76BAD2D55A4B5D04EEAA2F03E6B9C3ED06AB13D5DAE204891300D1C8F9247697EA72DABDF2220FE0C4AF7A850E2BFB2F429E273F4F9DE73489E1DFE8F19587C7CF02FD01B9D81691A14663A61B3AA0CDA9EC0BF4502CFFAB20993C95CFE71725C92646A0DE00ED84C44534103B158633C1CD18139960CFE920AD79ABD9F3C5859F8E93E2D623CC09D89B4B20FB9F4CD75C710CBAB5EBC4855B3EC004B3CF4910A545A1B5CD47F004CF0E250D4D5A10112A3EE891F31C8F92DE8F01038AF906A0220E9C3215C81A4D4C215F127BF9DBB9219A65323FD3D7B25792672513E56008CDF5638EE9532971F9949567144661D994023EA9497425941EC3A0CB284D040536DDA8A8B62073FB5425B181CD2D5F525D0B0EFAFA3572F80C38C507E8F1D9379498700BC3F13DB0082B9078AC119F92A04D5ED6315A8E43AC298168094850085F7BC338F6EC3F036395F4B36C4D8812A506BD7D59A065E99FC969A95C4F6ADC601C09C5C61AC0E7373E6CDCB2CDEA8452F34E806C4750867CE3C45E1EE7F87A2D50A6789B84B4E48C06BB78935657983E025576623CACF0113D08FA6ABBA69E6F527A9DAE2C318CE3DEC261A5C4494B3C7A88898356115497F48E4E9E6B7684D014CA165438251A00F01D0B5E0D294055AA63CDA17970676A57B67EB3628F0D1A735AF1B8D6BAF3060D733AF72A33D8B38EEFA210E35916DF80B4641E2BAB24C4428F82C03B9BCEDA4598DEF447EEBEC0809337690D9E2455654BCD83B9B0D17C87ACF0745FC687172BD6DEF3DE01DBF4CE7B3D1D371C52215284C372A8527984CA03A8CA391BB788A824B94DB1B410AA8709726FE5591B2B7E2FF0B3EEC9D1E0AF4751F1560B5ACAA37FA257E556C0D692CEA3A13ADD599D6EE1F700EE4F263FC1488E435E807327B05E01D36935576162AD8E36D68AB48EACF88876A9BF378E34921F8F29958B5CBA72E0C0D5817719CEFBC1CBCD6A032CA76422B924171D273951716575511D80B9D5C5CA791E6262548D0B485EB32A0325D147F70A8F671F829FA1E8E4A6D9FB4C10772894D151F724744C1F9DEB4423ABF7908EAFCC2AAF8584108489C8183F40BD5AD41DA7C3C64572E4E5767AA10403DF6D71903336665919B128A68E294621C3E473F1C6240238522E5050FEE48E2771BCA004D30F7894F79997CFDEBAC31E26D2BD33322941201CE76610E0D402A1AF9BAF070EDAC0D8EF62A30ADD01EBD83EC6024FA2920877CE88A8A61584D48BADA3ACD2C94801A5D5D8880E9056DA6C3E35292E4073404EA49465FC95916AB5A971F91086EBDF833001CBB9F12B675C6E0603EFE2C4083106C2098FF8D820886F4FFABB52DC99065AA6C572B9061C518992813950EF2F360D00A8FBB0E723BB18BA0E8D680E938B20170D8D554A6AA0D5172F97CF0EFB5B341DBB0514E574D8CC9E11EAFFB31C7FEC2CA667A5D3947CE7BFFA7467D2B4F30587BCFE3968C2C9F5FEED13D86CA67DF718890643689050024192942513DFAA560B8A3C426141B1C3513AA4E9E526305F559EA07B940E838C6B0E3CCDA3C6538B2838E0A4BFAD339CCAB936CA51D184E8BFE5760E7D0401404815203BED8972AAE65E68E08015966EBAD03175A5103C4CF4D840118E35F538C943FB9CF3BF409D7A11EEC8C6BFBAFDF670DD75F22548D3792298E749C4556BE0A0807EA079513B56B65A6CFE7D748BB2A1EE9FF16427E8BBE0DDCFD0D1957A47A5B85D6226A141F2A47DE47A06C16AC7D83B9AF44195D8AF5EA7BB1D05508F69B6A0D7F6B41C7295B72C6F695FA2D86DB0127A78BA1A28B057E074DC12B6D2CF7098D4B8130A3FAE5739F21F3E452563D41DC21E6233127ECC6A4773A7D483E608016FE5EFED76CD14686543993E2D5D63679A9FE2A0E4450E31B7A281F72E5E703132E4FE48E6EC4C525CD86B8F106F3190732B895A1C6C01B70F7FE449B7A96C635F3390741271BA45098C766F066886D5AE22E26D9D3CF822DEF4AD05CEAFD275458BC12680DB6443FD76ABAF904A5EC1867ECE9719493AE5544161D7F6810B880EE118F045F360DB2EDC33EDDD347539C5F109809838CD519B1F9384DFD81B6782183400F07E57064A518F0B446E4B77A93BC2DFA33366AE4FC2D99EF3A813DF52A6B25F9C4FB73E5E4666BE4EA1574C1BC2CDA200799BEE013E8BFA1DC216A1600B2157E9059CF8C73F219A9CB2A2D7BB3C9249FB4E4E9A44796FF0710E47D3415830399237F6EC1D586178EAAD3588C2F2A2DC66BE800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark%RBIEndFontSubset
/UOXTDV+Vibes-Regular cguidfix
/F1.1/UOXTDV+Vibes-Regular renmfont
%RBIBeginFontSubset: FYRBZP+Vibes-Regular
%!FontType1-1.0: FYRBZP+Vibes-Regular 001.000%%CreationDate: 7/26/19% Copyright 2019 Apple Inc. and its licensors, all rights reserved.11 dict begin/FontInfo 9 dict dup begin/version (001.000) readonly def/FullName (Vibes Regular) readonly def/Weight (SnapShot) readonly def/isFixedPitch false def/UnderlinePosition -75 def/UnderlineThickness 50 defend readonly def/FontName /FYRBZP+Vibes-Regular def/PaintType 0 def/FontType 1 def/FontMatrix [0.0010 0 0 0.0010 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 33 /space putdup 34 /E putdup 35 /n putdup 36 /g putdup 37 /l putdup 38 /i putdup 39 /s putdup 40 /h putreadonly def/FontBBox {-117 -680 842 1105} readonly defcurrentdict endcurrentfile eexecD9D66F633B846A989B9974B0179FC6CC4458BB4CB99E3608702C78822367AAF89059868F63F93207640A6BD5DA214789139C491E02A37BF3866F2964E8D690D48D9F6C4A5EC22355F8123573812483E06B968AE84B5F20A982A0E6576475351697AB8C6EA040355C5542F297D7A3AF28AB93EA0771E0D56DBF00F7CA9CE9FB9FC2E0ECB00D04D5F5F3F24B987B546D6274971A477DEE12C44623C180BCDBA21172627610C4736632D1A4693E79719C3BC43DF5330790A52DCD4CF455ACC213F6B1C4BA249179DB360225568161552A16682E3A3604BFC39D571B1F8F183746CED447A512FCCED4867841CD4E73E5A2630DE0248030AB7C1317763D6CDD07D69BFC940E412CCBB646708B671FF930312AFD7D9F1901A0B36EB57713754535193C3AEA84F6569A6EB51B2E27DC1344CC152EA38A18C05BE3407CD6D78C0FC323B045676A365809C449323EB7FCD627D10798B449B2E0643548310F987B92F0C46795D3FBAAB47BE5386E0BB392EA3543C341067F4EA70698E1619F3F98F4560BD11017E4B4F35AAD589860FC2F82267DFB082C5867A0DC8EB04543F6C67FAAC8814E495AA2A719B35F789D57437E0B5FBBA4DF7FDC2D724A20A739B0DB169DDA0AD6611EE113017976CA58E0427396A82E1D8841E4D7135A67FB57D92171D1F0CFAF20DF6F2117B818DEF8EC76F932D6E6717CB267BAE93F19B43EF76BB109382F6EBE373A1011D4528D5574EC0C2D051066A7ED76942FA4DE0B7D9EF4D146A9D53B0C3194CE8E4381FAFAE00B34A6953A7899D491D01F6FE9FB41978397F72701A4AA7DB804226BD6DD3A606921EC9D97FE28975F868156AA4CC409ABB504F7C60C8DE41F7DF1CBB6FE60E5FEEA9238C23A9C1F66CE56116AD404C137B9973CA54E6725883ED5025BC2D45AEA2444C7421FFC7C16702EFEF584AF0A3009EA97821CB9AD882BB096124C071D7C20287F63F5F20AAD6E11753696A47ABC3AC7B3A3EC0E0AB40565E8E789224D54AC1B6FB2F26E0EF852E7A59D8382B28359169E004F7AF555947150DF0B37AB0D8090A47CA63CC9DAC6B7D3459E4D357B35FC9A7FFDB3BB32C52B188361E969C0D0A8B25DA37A20999A346FA9564E4E86019E760CF0172C9405C01F9E28916700DB5045F664A6E8E58E5FDE0E42DC5CFED5223B24D8140A8265AB66DB853E0994DE82311A4BA38D110F7B100AB42F95FAE67F06FB56BC9ACEDECFE596B97726545AD2BB8E28CC2E573DD62818F4B163154344D145B3C970AE75F031E4EB42A8F4D34DC2D20014E2E992A09645E5C2BBEBF97A1CC1C35AD0708ED830229FD98B04B60A8DB83623BA224B7C27FABEDBC22714087594B182525B89C4C062D855AB938480E2E43BD803C3AFBAA99844376B3E4CB50967C6360CB5015184190940F1E797B50A950775993A1DA07A064DDF5FDD316294D126E92E39895BB267B8B359401F0D09AFB531A718980D36AF644A51619641199874FBAB89F553F51DC189ECF411FD519205F040387C2CBD540DC221C2EF83375C1FB6F2AC2A317C5D292A24F15AF1FEBB24E5CB26723F07409EDAD58314662999C196C90D87576EDDDDD04FB496BEAD5A0CACF9B095529CE32A39D3F13F4243426D13322C997973ACBF4068B81D3B829065215AE294DEF0F6111DFA5905B61C280C44201FFB660D4AA016F4E3F927D150EA11E3163B84FD38225D1AB1D29D4C011EC13DE3618C5155108EA2632CC507E6862351C8DC48F22669DE6DFF4C4FD11842733B59102B1A6EDEFFA9875C8E444ED400797C418548E9E3ED5E65A1B4BD6A025D472F1C4CD078AFB9ADB403FA547C46C7F19F913B4D748F1D7C96E3CFEA364E2D9992C678D4A6528AD87C932F0719CC7D00EC04018F8975AD9A71A9D9AB50A1F7D25243842B2B20A37F94A628D550C9B719D36268B22CE443D11D19053C99040DF7F5FB62EDC3DC72AA2E70D53F461ABC42F10769EF11DC292E762EAF8DEFF85C2037BB77E6B6E81349B3610BF140B7EA31C8FE8094355934235309F3A104A5D0F70410ABB56CE9967B95EFA3158A271BD92D12B9CB6944A8EE3A8E5624EA889E0BB45CBC00920E103EEA538D8773C6B24543B1443FD738EAC6D8BCCCB9726A94FFA92A9093CCB0BADC6693C17AD635137609BCA7E9C0942408D9578F968065CA8F10DBD047096ED231A40D844A0E159088FCF2691814B8B50A81920DBF2C505BF329497029CB230B0C604616D910A855E3A9C001906FD657C12F683211453C8280D5C742B0C82C1BF405757A0B3FF6B2C64553028BE24B12A741F9D0B9840E72CA5B325E9261C6FB9CA4AC9EA9A75E56DC2C1EEDEA8D59484D7998A3F5432EF0A3330467D4B8D20F138E51B8AF8E6207422FB47524E4C813E8380986F44355C4A04A4CB59267848A4FEA2B0441DA2A915B849F23FFA55112EB45E22CD9BE8310B995116FBD54337E5B2623AE07E1E7911BC0C18145E3F40A917161C254CD4ED39F7C9F447EDAA34746FD2E93F37A2AE30259501D617BB8BDEC03029B3819163FD138EF4DFDDBFC48EB72661F495928755FCC04902165CE78A8B3E32649A50643B07C74E6356ADD4351A6A6DC3322F82C149494BE2615979C21D4F65367CAADBB26622CF419C6A6507F539AD1F3C483734980F422B3484DB024C76604E67568BC8D16EB710D3F7FDBDEFB3DA0E9FED063F49A33FEE2A9EFE5D1D90C1488B863CBBAEEB4FD7B2F540EF00FF284B465335954912FDD559DC7DAC640E1C454D8983C43F20555E08354D3EBA08FEE0DE875F2B8B305F5F7DF7F5CCE58A162E3024BD826E65927D5BDA936B3E4755D801DC4965BF9EB7784D4A892331D914848C68AF6397F4056B1C5644ADA7ACE562B2B82C9633B5930D7F05CE5D07CC9D1CFB2C49DC1F2BBA198C0CE7368F51307B5C71F8BF6B674AB12F2AFCF7EBF43FD00EE7A8E94A936E7A8A1D50F0BC3713EAB70E7C860D52A89E6F1021B55ED0205C6392D97476B0213A340DEEEDDC05E44364C7F00F68F85BF535D4591068CF44F51FA4B18F6243411E6034E8D7D66A202BB548DDCB810EBE80AA44C85274BF831C9F0D9B2CCAD35E88CD01E3C459382A64D0CD966093625C857E6CD4C15AAC3EEC8E5B8B64A06CFA738016B4B2F2F88AC8B79122476B52703E9A503DADB66E3EF0BF360BB2258F6D8412DA8A93EDD76FA8A28D39683E48AD922B16EB58C3694141D714B19821B68EE3788D164512D44FA224CB603278EBCF633F6C00B4A284ABEF951DBEBB71EED0A9202BA04375D1B42A71F0FCECF0CCD40E705098426C27D4E9992897031381588ED4034D538677EC69C6DDA2FB2A3343207A16232C6C56FA8E6AFA52C43D38A865A6C60B472AC4F453F5B71849B94F4AA732B75A3B71812098CA90725F9693429452E5DA0C951D053E588A3A4D8EA3C2D26F2A4F1D33A08216D2F995710BDCC200F68531669AAF364DACB5892C8336A67CC4CB66A7C81857F67DECE9C39B48CD6B17FF1E4368F462E591EF12852D5851173F223C7A84564186E006FC304410FF0CE7D79A82BE3A3DF47A065401919294EA3282C496A9CBABAC7F7FEE16F252E32E35FB690751574E3DD32019C53B65DB80719F8504D0600936BEB94C0621D33E9358F5A32C4971AF2701529654F548FBB88FF202B87433908B64C9A0328089DAA4342452AA56CD9D135268092854160C6743749482F0515A69564BCAFA7BC97A7917406C46A6392AF1AE357C6AFF952CB8EEBA83C789F45E70716201073B503F592C4E6257BA79ED0FD5EEBCE59A97E3CF9925D4504E864E11193EF9B2DCECD871B12895985EE8FEDA11D8E89612F9E44EFB8ED31B1E91652B79977F62A074B7E5B928D8D33BDEE051E0242C310554C8DBDD5C6EE7FB375BB069E2B7EB54EDE1E29C15EF153CEAD6A143D423B8ED7338CBA46423F63F8D9784B2E6C2B2D985461F472950E5D1B4CFB4FFE4C2467543A7278643CCE16CECBCAE9210E4F1C907C429C4CF0ED9B9C8822BD9A1BEFF5A2234252765D78B27760C70A8E35F37C1EDD7742CB752FDA33CC97A4D1D5A380967A3BEE0BC22B18B4A23CD195F536ED4E4B323AF28EF27D325B74D84FFB36A35355932FEACBB40F70AF4133A1578485073ABABF9389FF4165B64A6209BCA4E41EC9080D8D1CBE5DE4E05EE951530D4511B9EA0BEBFA265CB8923B77B38E20537846E1B74D4875C40011399BC5E3926597E4A0AD503D0E001CFA92ADB215C61582402CEA60739D2FAEDAACAC32B1221D2C20894599B3B4F24063B877FED65E44C8E71D5E6B77634BCE3D81942C40F5B4DB9F7797B099D53D8BAFE4D6CCBB5A9418A47B4382794DBB3FE0EA63EAF81240BFE41357BDDC7A258FF09C65AC707F99FB1DBD8F15B8A8EBDE5E015B9CE295C095B992EB532E556E8AA58414FD633E101828FF2FADFF7925F0579AFCEAE9FC2B4132D9D199943B3B8E6FE060AF670CC01814464F5005109940CDD440D6A697EF14C768B9A264676E21522F519EE17733C5A87269C6510445765A7E5AFEA80A31625B51ED29373485045EC41C74564FEE23D31BFC150E0C347FCF60288DE70FA0BB1761314571E3E0CDB93739BD5DDA3A60FB8796E8C6E1760D2509B7D9D6A2D6CC5E4422CC4C1C48A1795C23F07D985D94272EBCCDF07D53008F94BD99D36229705460F94D17C89C352E277D5C7F304053AE7D79FBB5BCFB6B4D4E9E9C5AD174779E8B1C44252BBB4E3586405327BB5EB240B6E786D790A83C814EBCFCECADE5B31DF3F27CEE0638434CA991EAAFC2BC24E05433D350DB4E54839C5A7C83EB37B6F3739420BAD168C16BE6763E3932C8A8B98A8C7F3E069749F8378D60572D312CCB4BFC6A5046A97497B32CEA70FBE8DEF8B446427EAB1B19DEF47AB46BECB631E1C49E0E0863FC86EADD37D7CA1E6BEE8DD7B824A9C7D9766BD0B7AC1ABEE486C4A3E8EA8102301BA1E7451808C15545ADEFA4E47B8CFE580A9DBA8EE50482833D46040B2804E2E50A78D14238D22192A84ECB204596F170062C1FF1F77E92DE03AE0BDCB6474A8E53E78D38DA89757B9809CB3B884F03950C4A3F8F8E18F5A834CECEDCBDE7260F11ED9B994161C391349976A18ADE32C6CC1200FC488E5E77AFCE4CC2115785FBDAF23058C9C301AA51A51898A9F7EFE7C5A3EEC7265044C641FF0392E5921CBEED20B50159A92073C601A7DDD50F7342098848BCE0FE85C8E4D44CAC871D95B2D296CCA7BE1AB4F181E39AA8F75DDD64CC4AAB7A2BFE603E62DF598A6D016485F0636D69F5CC8A2E4D84D12C1C2624F5995E178C48B2D86E5F737C6157CEFB0A4508C66F7343BFB216BFAB88AC8780C9B5AE5267FE89299685C6E509A1E82AEECC0065B6A33C56D66CF7E7B3113FD279B760F2F749D674BC0BF7F797F9BABF6F5B0DE1B5AC3E95B4F901EDDAF968F52B21F8088981EAD67ABCF85F040DE90D454799643C5D8CE01196A20A119493F4445291A4E23305A3A260DB5F37D780726852E423DF8FA59F5FA88FCEEC672911CC8A1035CB909A0F995CC432D11D8F2FF9F82ED2C73275900FB50B5ABA2B6096F2B81A8627B0A6CD8F4FED653DB93C1B2F464C6D4EBEAA0DCE38597C47FF626DF2D5A29BF2D7C2E3AEFC1F7F721F39F93A6B47D756FCF9484CF253A889E63DBB663952C8394C9FDEA9F7C07B379351F59FE9ED738FB1C48C247F3F5A32E23877ABD8F27928865971B7493325E0F43423EA74CD1F767FC840560C212D57B9B22E89EF4E5B3D439FA647A17BBA2F1642A82511C627155E29C8E9926E1834F22427BE1465017A2F3F35EA39C82C04FC4D625B18BCF1B0C2FD1D5C21F817C0E8D30E960C00E2C8B7A89213CE1D010A1A547ED74991B35CF394A5B5ED2B0A34F0E3C7FD0C4B58C37BD4E9419AC8145C787A8D93E0C266D9C7FA3B069C5233717FADCE5FC029BFEB1321265EAB59DB0A228C375DFE530CAE054EE5692B1D6A7AED7F4E9C0C2A0DC9ED579785756ADAE35E3D308444ED372870B63B02F2282552678A57136EE440678C6E5808DF5E226C566622810A9DF11ABA3B1BD666C683926092BFA088FFB627815582BD599132E0EAF2533DD4BBF1E3F5A783EB77F15F1ADE5CA551FEFE465EED6A2151987A490A3C070FC9864A4D0AD9165BE964F4FB2FF45B46F2753D4D978C360D7A8C9F18563F69BF760B6094A41A15BA51EBCE3BEA3A436DF25ADB92853B9F0E6FFE3EF5A1A6901547C62129829C3B03E544EBFF0237641FFC273EAFA812A99E58FEB40D252F63901D3928B5679B42830D0B6669C110BB8B2A4B62571A3F82C3FB4DCC07EE5C2FD46E95806780AB634D0B943A7C32716A0FFF3FF1EA79B73BCA6AB279BB61696260E2EF29635D69F779413D579D4EC2475FB9933F52ECC83815739B30202060830CBD579A33D9802E6397C1F2B203BE7E12F01CBFFFCEB35170F7369C105E57E57E3E427965A099249606380E6234C9EC806EB7B4DBED77F592ABA262176558E6BDC479AB1BD92442644A4A31EF01B95478B2D32F406C4AEA1E487C4A7FD8E85F5538E292B0F33031DDA4C445AA4A7AAB1515E5BD688943C57946B3F38229E2E31714C186BEF3FAD940E69BEDE8D2ABC3698995D1ADCB7A285DFC5FFA523A6B30EA58A3C61576C8FC020B6439380D4D67B81F98542F5AE21AA1FAA6DB2A6122EBF91EE30DF96A07981B1328EF4FE7FE75483596849803ED12242D50BF7DCE7E4A9A81312C0639AB37D0391FD528A99FECC4168FBFA8EC714A5D48D8F25B013E4415B57C74144E70D116A62015E0DDDBCB5F1A7E31859271566BEDA693EB6F0A2A7C922318F6C338D091729C636EE906BFE4C3ADF22F2830B81F5EC80421CB9E2A65C238B4CF7FFE0CF5F82A5EF8C427942B3E5AE26F31459C54A92FDA9D92D64E78BF14A5B6095AFFD6711A3FEA135DF7D0D9791DA2145EC5029EB90F45C8CBD404307645664FA04E655BEA7AF0B7FAFD035A3025E98467C7F0792F4F7B6544EEC04D94D2205A4E34BA5A724055918F2CD55921D4999702159A3BA54215337545D66DDE992E0F7642D1E8FE12B37BF867545DBCFC6B52E0DF9FC2EB7E50C7849BC5A753DF4764A8C52C7F0599290835D26F06FB8D763692C65190C78ACDADB18D99636EE969417C8A9B1FECEEDA9CD908F987A55A7A4CF0D3F9A13AFDBDF86446D5BB2C3838C8BE723B9F72352A2369BDB4D861C556CF3019C681790616962D9D959DF2C2A6711A41BF31D8B87689DDFA7A4BC94358A3FEC7DDBA920EAFBA1915D53743B4B160F38834A071B56A09EA389959B228163EBA27E0B61CE941AC16D9A5236425721CB99CB5187801E5955E7F827587C339BB68C85CE49207DCDD5DF5289D4D735D567DA64E8244B682260E2C9F406E3D196491E5E7BEB3659FDE6A9579E8A9EE7603315019BE61F359099878601AFF77C6840914F112BA0E4FAC772A61DA803427A02819CB21E834D680C21C8FF577FC2F808BC6658B88B79F2F35A9504FB7BBF2BB48A35BDE612528BBABAF0069F9B3D35DD2B49FD5048294B90CF4BE06B12A86309B723103CC2B9174832A11493EEBA04B43D8943E0F47D9A82C060DCF1D17385BD4D5F165378E60440C82A044B07A82DB0B0C89C83BE19CE8AA4274EA5B260916B06307DB26657A40CB019ACB1D474050F8C7F7D3FAD134E4C9D741B355913C456D3039DC5309D34D82EB7AF37797647AA0681B6163488E883065B81AE93C45A1653933C64FF00C68840F1F52783E7C374ED6BAD4DE001F4C3007B1F317579651E6D6662189CC2AF9DECA37431E542990682712D1C26CE70723F961AE918F7A96720E742BED221E2202A46E48DF5B6BD4835017FEC5C82E1B843D2ACFDF1BE018801AA89C44FDC7D33A0F913E74CF03496D3A0A85158A10136F2FD01D1C01DE292BA349D92F46C165F61DB13CBD714F7FE22F49079563B4216F35349A5FB3C8C6D0FAE9F879FB2BEA9DB1FCAF091AF719EF1B555BF5CD84CB1A47B94979A1AEC07CC71172608E2FB39E500E15F5085B37D993CCC2992E44B1AC9972DF900D97A27B71189FE811796C192CF47B15BF27F59CB0616C732CABFB60DB70E3000571E2233F78FFA259D579D8C717B8A4C2162EBC4434CE929670D8C568BC9A81A375D899E5F8FA27100CAEB0681B90356C4BFF6D05844285752BD616382B5A904C753C507869F78EDA9947F363576DF6589F02566ED5ED81A19B42037DCF634147136D65A8EE48A66D7AE6756D4CE1FAFCEAA2BFBF49A30EDD70997D5D289FBF020D89506CD1278CAB4ABB1F5049D7336F5E3A9BB6BF648AADF352A3C9291C88CAFD2914C3E75E735C2361D17D65E95F874B914A03C6566EAF1DAD4CE2F9CDFFF62078011F3007E4CC3780B0A3C891F6B00C742C211325FAC7BC02E4A84D59DA02D25051B3DE3F92C932EF9DB2988D7725C1B7E99EC2478EA64F1BCB026ACFC73034EC2073ABE9D06B9862FB822290DCBAF285E71BA4E8A71D334EECBE7A711D950AFA81836D4F7FDA32F84E0065C3DAAD29726C65C6AF2608D27CEED0C4CF9BCE2752DD72F195E89448143EEEBDFC1B9A514C2B68256556D866C76F3568DADE13A235943E20C023CF290D309818BBA23DF59E3BCB661728CDF269076C7DED4CA827954154C3F9D074E893778E76C386FB97A902A3DCE0013D2102741889BBBF23DDB3C70D838A38421BD1A458949B306914075B5473C02612291D7128CF65AB152FFD2CA62A64CC5DC702422328CAE6901E19E4CBCB587D2C48AA89062A724A368F34791447D09D74EC36C4BF8FCE74076177D517BF642F220FEF62368F50CA6CF38BF8FD3FF858055D689425CD29E714C5C823D6006864EEC566AC38C70DD0E26092EF9F69B7948E104D17B5B42529F8FD2E363143BE369749846E10C2578756E85BB31B59D45F998DA4898F355195E32457D239CA50509600A2642BE891429DD768AF95430AB5C830DED416CD639ACE7162E082375FC86526BA891A81E561178555A92D530BA7473748489969FD89DF57D5FDC922B467FB4FE2FF48D9BBBD85EB9BACD5F4E8ADED5CAFB96E85641C2032845B518E95ED31E89C0423CFB0B9906D1F05912E153B5B28725400D2B056DD24E6EC4F51D4846FF3F287276FDC4D4C6940B02C2FCB721C4A0B1EA36B52947E5D5A4BCDBA6D7B35526797A849F050F5CC4CC59CE938609A1D1701BFCA91A704FE312427C19DCFE7A09BBD7FD48875F272DA34AC62B41CD27B6410EC4CD6208AC752842B0A0659D01FD57F5DE3E1A14EC49315C41F59B453571F1F868459F24396D028B4435CE484397AF6DAD753F7202F916593C80C995C98102037215C93E9D4791E4DF8D0028E30F41EE6CB0AEBFD4ACE2CE235BCBD22093A701FBA047164707AF3BE13CA4A9B38632A2D1B5FD51A52BF0D97B34C1C627BED0B756CE350E072B8B90ADA5BA27D2B1670B8BFC8625868B5C4C91D8AD32728A3BEC700CEE5ED5466D52F5FC7A18AFE2FCAC74F0DF0D7BA1631916A8DFB79889276696229E02F21ED18A837F4536C07295F2A0E81DC5705F0A54ACE56FE497E553DC989800F18F82AB0B453AECE28F372B1477B93807D36B848BC1A2D6AB75576C5AF72D0243CF9135B607254DC743C70575821577663E5074DBE121B3528DDAE5D4F4A03FD13259454E006456EE49869A1BD1D67171496D3B4C03EDFAAD563BBDCF463EFDB1DADF35B869BB210E4CA432B485837DF2BDAFA0C373AD67C776261569B24FB73F01300438EFF5BC2EF841F7F8DEDBFA92D1591447C5EC4FA335C57EB331735060C1A92470E3AD7F14DB5BA3040DA295970A92BE086A8DA4AEDD224839CD685108C0ABE08F25A4B1D8C93389D67199C253E8C5C962E093BE70BDF229B7A4C1D3A521A1EB29F1871201B154841A3CF9E447279317244D1D015290C75B91BCD816A18207E83C683A3F2387CFD320D4257B8C3A8A0DA3FDC421D427E28CA614376237D1ED7EDE3F4F4D9DE550F2C72914ED8A99300223CD530B0ECB173B9B1D1E345258170C1871EC239BB08AB64F11807355730298276367E011C62FF728024CA29026B5A2B18B625D8EA5CB4B3A1164F0D78C88127092B99C917A0F3622872C0C88E295F7BAE5FC015476BE7D305FE57AFBB6B6D89CB8B57F06CFC7619EBED14FA04E4ADF4251A73B2EABBBC68F3BD7C12C4EF217DE7AAD3D90E355312A75DC751682F280793A2A3498B54B0B5EB95764BC1C5005F63D732A4D3BDB67AC84BE24DE2937727E7158C0CCB7D9E32D850957456E87A5D00C3BF0A0608CD7DB7C701E0E045D9F51500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark%RBIEndFontSubset
/FYRBZP+Vibes-Regular cguidfix
/F2.1/FYRBZP+Vibes-Regular renmfont
%RBIBeginFontSubset: FTZSJV+LucidaGrande
%!FontType1-1.0: FTZSJV+LucidaGrande 1.0000.6.0040
14 dict begin/FontName /FTZSJV+LucidaGrande def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /uni2029 put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -2186 1 index div -1509 2 index div 3361 3 index div 2381 5 -1 roll div]cvx def
/sfnts [<



2121591B212121592D2CB00243583DCD181BCD592D2C462346608A8A462320468A608A61B8FF8062232010238AB10C0C8A70456020B0005058B00161B8FFBA8B1BB0468C59B0106068013A2D2C2045B0032546524BB013515B58B0022546206861B00325B003253F2321381B2111592D2C2045B00325465058B0022546206861B00325B003253F2321381B2111592D2C004BB0C8515800B00743B006430B592D2C8A10EC2D2CB00C4358211B2046B0005258B8FFF0381BB0103859592D2C20B0005558B8100063B003254564B00325456461B0005358B0021BB04061B00359254569535845441B2121591B21B0022545B00225456164B028515845441B212159592D2C21210C6423648BB84000622D2C21B08051580C6423648BB82000621BB200402F2B59B002602D2C21B0C051580C6423648BB81555621BB200802F2B59B002602D2C0C6423648BB84000626023212D2C184B5358B00425B00425496423456469B0408B6120B080626AB00225B00225618CB00C2344218A10B00CF6211B218A11231220392F592D2CB00225B002254964B0C05458B8FFF838B008381B2121592D2CB0134358031B02592D2CB0134358021B03592D2CB00A2B2310203CB0172B2D2CB00225B8FFF038B0282B8A102320D023B0102BB0054358C01B3C59201011B00012012D2C4B53234B515A58381B2121592D2C01B0022510D023C901B00113B0001410B0013CB001162D2C01B00013B001B0032549B0031738B001132D2C4B53234B515A5820458A60441B2121592D2C184B5358B00425B004254964B00325B00325496468B0408B6120B080626AB00225B00225618CB00C234421B004251023B00CF61BB00425B0042511122320392F59CC21212D2C0118B0184358B0052546234564611B21B00425B004254A59B00E23442310B00EEC2310B00EEC2D2CB01B435820B0016045B000515820B0016020452068B0005558B0206044211B212121591B20B0016020452068B0005558B8FFE06044B01C4B50582045B02060441B21591B21212159591B21592D2C4B53234B515A58381B2121592D2C4B5458381B2121592D2C4B52587D1B7A592DB800532C4BB800095058B101018E59B801FF85B800441DB9000900035F5E2DB800542C2020456944B001602DB800552CB800542A212DB800562C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB800572C2046B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB800582C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB800592C2020456944B001602020457D691844B001602DB8005A2CB800592A2DB8005B2C4B20B00326





00>] def
/CharStrings 2 dict dup begin
/.notdef 0 def
/uni2029 1 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-2186 -1509 3361 2381}def
/UniqueID 4261101 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C92725788540EA741B17F7A4B26645F1AC6C6DD680CE8F1F60AEE279148EC39EE9402EDDBB38250DD52287BACC4589C47FA62E17343FA32737214124537096092929B921831333E95D99CD55495FBAF633477D164FF95F58305F50846A4334DE854729E3DF435DF5E26529AB97862B0009910FF6B0F73BCD65C549FA9FD494576EBB3E80EE9859C780A679ED1E3DE3A1A2AF8E64CF9F792D590F48184AF4A919ED55E36727F997A71200A1D230E73507F7EEE284764F296C17E44FDFF072854FCF69BC6EFAE45D2B6243158C5A460B65D6157720B1FCFAA9F821A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/FTZSJV+LucidaGrande cguidfix
/F3.1/FTZSJV+LucidaGrande renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 1 1 sc
q
0 0 612 792 rc
0 792 m
612 792 l
612 0 l
0 0 l
h
f
Q
0 0 0 sc
q
40.814941 72 530.37012 674.95007 rc
1 0 0 1 238 530 cm
/F1.1[ 81 0 0 81 0 0]sf
0 0 m
(!"#$%)[ 61.803000 13.446000 13.365000 8.586000 0.000000 ] xS
/F2.1[ 81 0 0 81 0 0]sf
135.918 0 m
(!)s
1 0 0 1 96.75 420.00009 cm
/F2.1[ 50 0 0 50 0 0]sf
-15 0 m
(!!)[ 7.500000 0.000000 ] xS
0 0 m
("#$%&'\()[ 21.400000 24.300000 26.800000 4.150000 3.800000 16.750000 0.000000 ] xS
/F1.1[ 50 0 0 50 0 0]sf
128.10001 0 m
(&&'\(\))[ 2.600000 2.600000 3.750000 3.750000 0.000000 ] xS
/F2.1[ 50 0 0 50 0 0]sf
165.95 0 m
(!)s
/F1.1[ 50 0 0 50 0 0]sf
173.45 0 m
(*+,-.'\()[ 26.650000 8.300000 8.250000 6.100000 27.500000 3.750000 0.000000 ] xS
/F2.1[ 50 0 0 50 0 0]sf
257.75 0 m
(!)s
/F1.1[ 50 0 0 50 0 0]sf
265.25 0 m
(*/00')[ 26.650000 27.500000 6.100000 6.100000 0.000000 ] xS
/F2.1[ 50 0 0 50 0 0]sf
335.35001 0 m
(!)s
/F1.1[ 50 0 0 50 0 0]sf
342.85001 0 m
(12)[ 21.300000 0.000000 ] xS
/F2.1[ 50 0 0 50 0 0]sf
385.14999 0 m
(!)s
/F1.1[ 50 0 0 50 0 0]sf
392.64999 0 m
(34)[ 25.100000 0.000000 ] xS
1 0 0 1 89.900002 331.00009 cm
/F3.1[ 50 0 0 50 0 0]sf
0 0 m
(!)s
/F1.1[ 50 0 0 50 0 0]sf
0 0 m
(*5\(-6&'\(\))[ 26.650000 23.900000 3.750000 6.100000 21.300000 2.600000 3.750000 3.750000 0.000000 ] xS
/F2.1[ 50 0 0 50 0 0]sf
116.95 0 m
(!)s
/F1.1[ 50 0 0 50 0 0]sf
124.45 0 m
(*7\)-8'\(\))[ 26.650000 8.250000 25.150000 6.100000 26.850000 3.750000 3.750000 0.000000 ] xS
/F2.1[ 50 0 0 50 0 0]sf
250.10001 0 m
(!)s
/F1.1[ 50 0 0 50 0 0]sf
257.60001 0 m
(*#3+9'$,)[ 26.650000 8.250000 25.100000 8.300000 20.100000 3.750000 5.300000 0.000000 ] xS
/F2.1[ 50 0 0 50 0 0]sf
363.29999 0 m
(!)s
/F1.1[ 50 0 0 50 0 0]sf
370.79999 0 m
(:;<#)[ 25.700000 37.050000 8.300000 0.000000 ] xS
ep
end
%%Trailer
%%Pages: 1
%%BoundingBox: 0 0 612 792
%%EOF
